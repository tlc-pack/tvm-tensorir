[01:58:09] /home/ziheng/projects/tvm-tensorir/src/meta_schedule/search.cc:63: Tuning for task: SearchTask(task_name=dyn_mm, flop_ct=-1.000000), workload:
@tvm.script.tir
def func(a: ty.handle, b: ty.handle, c: ty.handle, M: ty.int32, N: ty.int32) -> None:
    C = tir.match_buffer(c, [M, N], elem_offset=0, align=128, offset_factor=1)
    A = tir.match_buffer(a, [M, 1024], elem_offset=0, align=128, offset_factor=1)
    B = tir.match_buffer(b, [1024, N], elem_offset=0, align=128, offset_factor=1)
    # body
    with tir.block([], "root") as []:
        tir.reads([])
        tir.writes([])
        for i0, i1, i2 in tir.grid(M, N, 1024):
            with tir.block([M, N, tir.reduce_axis(0, 1024)], "matmul") as [vi, vj, vk]:
                tir.bind(vi, i0)
                tir.bind(vj, i1)
                tir.bind(vk, i2)
                tir.reads([C[vi:(vi + 1), vj:(vj + 1)], A[vi:(vi + 1), vk:(vk + 1)], B[vk:(vk + 1), vj:(vj + 1)]])
                tir.writes([C[vi:(vi + 1), vj:(vj + 1)]])
                with tir.init():
                    C[vi, vj] = tir.float32(0)
                C[vi, vj] = (C[vi, vj] + (A[vi, vk]*B[vk, vj]))

[01:58:09] /home/ziheng/projects/tvm-tensorir/src/meta_schedule/database.cc:147: Loading tuning records from: matmul_dynamic.log
[01:58:09] /home/ziheng/projects/tvm-tensorir/src/meta_schedule/database.cc:174: Nothing is loaded. File does not exist or cannot be opened
Get 1 RPC servers for measurement!
Traceback (most recent call last):
  File "tune_dynamic_matmul.py", line 86, in <module>
    test_dynamic_matmul()
  File "tune_dynamic_matmul.py", line 81, in test_dynamic_matmul
    measurer=create_measurer(),
  File "/home/ziheng/projects/tvm-tensorir/python/tvm/meta_schedule/auto_tune.py", line 72, in autotune
    verbose,
  File "/home/ziheng/projects/tvm-tensorir/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  [bt] (5) /home/ziheng/projects/tvm-tensorir/build/libtvm.so(TVMFuncCall+0x5b) [0x7f113e1f209b]
  [bt] (4) /home/ziheng/projects/tvm-tensorir/build/libtvm.so(tvm::runtime::TypedPackedFunc<tvm::runtime::Optional<tvm::meta_schedule::Schedule> (tvm::meta_schedule::SearchTask, tvm::meta_schedule::SearchSpace, tvm::meta_schedule::SearchStrategy, tvm::meta_schedule::ProgramMeasurer, tvm::runtime::Optional<tvm::Integer>, int)>::AssignTypedLambda<tvm::runtime::Optional<tvm::meta_schedule::Schedule> (*)(tvm::meta_schedule::SearchTask, tvm::meta_schedule::SearchSpace, tvm::meta_schedule::SearchStrategy, tvm::meta_schedule::ProgramMeasurer, tvm::runtime::Optional<tvm::Integer>, int)>(tvm::runtime::Optional<tvm::meta_schedule::Schedule> (*)(tvm::meta_schedule::SearchTask, tvm::meta_schedule::SearchSpace, tvm::meta_schedule::SearchStrategy, tvm::meta_schedule::ProgramMeasurer, tvm::runtime::Optional<tvm::Integer>, int), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const+0x3f9) [0x7f113d689fc9]
  [bt] (3) /home/ziheng/projects/tvm-tensorir/build/libtvm.so(tvm::meta_schedule::AutoTune(tvm::meta_schedule::SearchTask, tvm::meta_schedule::SearchSpace, tvm::meta_schedule::SearchStrategy, tvm::meta_schedule::ProgramMeasurer, tvm::runtime::Optional<tvm::Integer>, int)+0x133) [0x7f113d6837f3]
  [bt] (2) /home/ziheng/projects/tvm-tensorir/build/libtvm.so(tvm::meta_schedule::ReplayNode::Search(tvm::meta_schedule::SearchTask const&, tvm::meta_schedule::SearchSpace const&, tvm::meta_schedule::ProgramMeasurer const&, tvm::meta_schedule::Sampler*, int)+0x269) [0x7f113d6e3709]
  [bt] (1) /home/ziheng/projects/tvm-tensorir/build/libtvm.so(tvm::support::parallel_persist_for(int, int, std::function<void (int, int)> const&, int)+0x19ae) [0x7f113db1860e]
  [bt] (0) /home/ziheng/projects/tvm-tensorir/build/libtvm.so(dmlc::LogMessageFatal::~LogMessageFatal()+0x82) [0x7f113d2927a2]
  [bt] (8) /home/ziheng/projects/tvm-tensorir/build/libtvm.so(void std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)+0x74) [0x7f113db1b974]
  [bt] (7) /lib/x86_64-linux-gnu/libpthread.so.0(+0xf907) [0x7f11e7aff907]
  [bt] (6) /home/ziheng/projects/tvm-tensorir/build/libtvm.so(+0x1770b59) [0x7f113db1ab59]
  [bt] (5) /home/ziheng/projects/tvm-tensorir/build/libtvm.so(+0x176c16e) [0x7f113db1616e]
  [bt] (4) /home/ziheng/projects/tvm-tensorir/build/libtvm.so(+0x1339058) [0x7f113d6e3058]
  [bt] (3) /home/ziheng/projects/tvm-tensorir/build/libtvm.so(tvm::meta_schedule::PostOrderApplyNode::SampleSchedule(tvm::meta_schedule::SearchTask const&, tvm::meta_schedule::Sampler*)+0x27) [0x7f113d68aae7]
  [bt] (2) /home/ziheng/projects/tvm-tensorir/build/libtvm.so(tvm::meta_schedule::PostOrderApplyNode::GetSupport(tvm::meta_schedule::SearchTask const&, tvm::meta_schedule::Sampler*)+0x2148) [0x7f113d68d3d8]
  [bt] (1) /home/ziheng/projects/tvm-tensorir/build/libtvm.so(tvm::meta_schedule::SearchRuleNode::Apply(tvm::meta_schedule::SearchTask const&, tvm::meta_schedule::Schedule const&, tvm::tir::BlockRV const&) const+0x119) [0x7f113d6a8a59]
  [bt] (0) /home/ziheng/projects/tvm-tensorir/build/libtvm.so(+0x1e44ebb) [0x7f113e1eeebb]
  File "/home/ziheng/projects/tvm-tensorir/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/ziheng/projects/tvm-tensorir/python/tvm/meta_schedule/search_rule.py", line 115, in apply
    ret = func(task, sch, block)
  File "/home/ziheng/projects/tvm-tensorir/src/support/parallel_for.cc", line 143
TVMError: Parallel_for error with TypeError: micro_kernel() missing 1 required positional argument: '_info'
